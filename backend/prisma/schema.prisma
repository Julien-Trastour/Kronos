generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  lastName      String    @map("last_name")
  firstName     String    @map("first_name")
  email         String    @unique
  password      String
  roleId        String
  team          String?
  agencyId      String?
  supervisorId  String?   @map("supervisor_id")
  entryDate     DateTime  @map("entry_date")
  seniority     String?   @map("seniority")
  departureDate DateTime? @map("departure_date")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  role         Role    @relation(fields: [roleId], references: [id])
  agency       Agency? @relation(fields: [agencyId], references: [id])
  supervisor   User?   @relation("UserHierarchy", fields: [supervisorId], references: [id])
  subordinates User[]  @relation("UserHierarchy")

  @@map("users")
}

model Role {
  id         String   @id @default(uuid())
  name       String   @unique
  superiorId String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  superior Role?  @relation("RoleHierarchy", fields: [superiorId], references: [id])
  subRoles Role[] @relation("RoleHierarchy")

  users       User[]
  permissions RolePermission[]

  @@map("roles")
}

model Agency {
  id        String   @id @default(uuid())
  name      String   @unique
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("agencies")
}

model Permission {
  id       String           @id @default(uuid())
  name     String           @unique
  category String
  roles    RolePermission[]

  @@map("permissions")
}

model RolePermission {
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
  @@map("role_permissions")
}
